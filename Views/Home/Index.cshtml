@{
    ViewData["Title"] = "Home Page";
}
@using System.Linq

@model IEnumerable<WebsiteSellingBonsaiAPI.DTOS.BonsaiDTO>

<style>
    .card {
    background-color: #f9fdf9; /* Màu nền nhạt, hợp với cây cảnh */
    transition: transform 0.3s ease, border-color 0.3s ease;
    }

    .card:hover {
    transform: scale(1.05);
    border-color: #218838;
    }
    .product-card {
    position: relative;
    }

    .product-card .hover-overlay {
    opacity: 0;
    }

    .product-card:hover .hover-overlay {
    opacity: 1;
    }
    .cartt{
        right: -100px;
        transition: all .5s ease;
        position: absolute;
        background-color: rgb(255,255,255,0.01);
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: right;
        align-items: center
    }
    .product-card:hover .cartt {
        right: 10px;
    }
    .card-title {
    font-size: 1rem;
    font-weight: bold;
    margin-bottom: 0.5rem;
    }

    .card-text {
    font-size: 0.875rem;
    }

</style>
<div class="container">
    <section id="featured-products" class="py-5 bg-light">
        <div class="container">
            <div class="text-center mb-4">
                <h2 class="fw-bold text-success">Sản Phẩm Nổi Bật</h2>
                <p class="text-muted">Khám phá những mẫu bonsai đẹp nhất chúng tôi cung cấp</p>
            </div>

            <div class="row g-4">
                <!-- Product Card 1 -->
                <div class="col-md-4">
                    <div class="card border-0 shadow-sm">
                        <img src="~/Data/noimage.png" class="card-img-top" alt="Bonsai 1" style="object-fit: cover; height: 200px;">
                        <div class="card-body">
                            <h5 class="card-title text-success">Bonsai Nhật Bản</h5>
                            <p class="card-text text-muted">Phong cách tinh tế, mang lại không gian thiền định.</p>
                            <a href="#" class="btn btn-outline-success">Xem Chi Tiết</a>
                        </div>
                    </div>
                </div>

                <!-- Product Card 2 -->
                <div class="col-md-4">
                    <div class="card border-0 shadow-sm">
                        <img src="~/Data/noimage.png" class="card-img-top" alt="Bonsai 2" style="object-fit: cover; height: 200px;">
                        <div class="card-body">
                            <h5 class="card-title text-success">Bonsai Nghệ Thuật</h5>
                            <p class="card-text text-muted">Tác phẩm nghệ thuật sống động từ thiên nhiên.</p>
                            <a href="#" class="btn btn-outline-success">Xem Chi Tiết</a>
                        </div>
                    </div>
                </div>

                <!-- Product Card 3 -->
                <div class="col-md-4">
                    <div class="card border-0 shadow-sm">
                        <img src="~/Data/noimage.png" class="card-img-top" alt="Bonsai 3" style="object-fit: cover; height: 200px;">
                        <div class="card-body">
                            <h5 class="card-title text-success">Bonsai Phong Thủy</h5>
                            <p class="card-text text-muted">Mang lại may mắn và tài lộc cho gia chủ.</p>
                            <a href="#" class="btn btn-outline-success">Xem Chi Tiết</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>


    <h2>Cây Bonsais</h2> 
    @if(ViewData["image"] != null){
        @ViewData["image"]
    }
    @* <a asp-action="Index" asp-area="Admin" asp-controller="Home">admin</a> *@
    <p id="output"></p>
<script>
    function getQueryParam(param) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(param);
    }

    const typeId = getQueryParam("TypeId");
    const styleId = getQueryParam("StyleId");
    const generalMeaningId = getQueryParam("GeneralMeaningId");

    const typeList = @Html.Raw(Json.Serialize(ViewData["TypeList"]));
    const styleList = @Html.Raw(Json.Serialize(ViewData["StyleList"]));
    const generalMeaningList = @Html.Raw(Json.Serialize(ViewData["GeneralMeaningList"]));

    function getNameById(list, id) {
        const item = list.find(element => element.value == id);
        return item ? item.text : "Không có tên";
    }

    const typeName = typeId ? getNameById(typeList, typeId) : "Không có giá trị TypeId";
    const styleName = styleId ? getNameById(styleList, styleId) : "Không có giá trị StyleId";
    const generalMeaningName = generalMeaningId ? getNameById(generalMeaningList, generalMeaningId) : "Không có giá trị GeneralMeaningId";

    let outputText = "";
    if (typeId) outputText += `<strong>Loại cây:</strong> ${typeName} <br>`;
    if (styleId) outputText += `<strong>Kiểu:</strong> ${styleName} <br>`;
    if (generalMeaningId) outputText += `<strong>Ý nghĩa chung:</strong> ${generalMeaningName} <br>`;
    if (!typeId && !styleId && !generalMeaningId) document.getElementById("phanloai_all").parentElement.classList.add("border_link");

    // Ghi vào thẻ <p>
    document.getElementById("output").innerHTML = outputText;
</script>

    <div class="d-flex justify-content-between">
        <div>
            <p>Tổng kết quả tìm thấy: @ViewData["totalBonsais"]</p>
            @{
                var totalBonsais = (int)ViewData["totalBonsais"]; // Tổng số bonsai
                var resultsPerPage = 12; // Số kết quả trên mỗi trang
                var totalPages = (int)Math.Ceiling((double)totalBonsais / resultsPerPage); // Tổng số trang
                var currentPage = (int)ViewData["CurrentPage"]; // Trang hiện tại

                // Tính số sản phẩm hiển thị trên trang hiện tại
                var startIndex = (currentPage - 1) * resultsPerPage + 1; // Chỉ số bắt đầu
                var endIndex = Math.Min(currentPage * resultsPerPage, totalBonsais); // Chỉ số kết thúc, tối đa bằng totalBonsais

                // Nếu trang cuối cùng có ít sản phẩm hơn số sản phẩm mỗi trang
                var itemsOnCurrentPage = endIndex - startIndex + 1; 
            }
            <p>Tổng kết quả hiển thị: @itemsOnCurrentPage/@ViewData["totalBonsais"] (page @currentPage)</p>
        </div>
        <div>
        
        <select id="Box_Sort">
                <option value="Id_low">Sắp xếp mặc định</option>
                <option value="Price_low" >Gía tiền từ thấp đến cao</option>
                <option value="Price_high" >Gía tiền từ cao đến thấp</option>
                <option value="Size_low" >Kích thước từ thấp đến cao</option>
                <option value="Size_high" >Kích thước từ cao đến thấp</option>
                <option value="YearOld_low" >Độ tuối từ thấp đến cao</option>
                <option value="YearOld_high" >Đổ tuổi từ cao đến thấp</option>
            </select>
            <script>
                var sortby = getQueryParam("sortby"); // Giá trị này được truyền từ Controller
                var sortbytype = getQueryParam("typesort"); // Giá trị này được truyền từ Controller
                var sortValue = sortby + "_" + sortbytype;
                 document.getElementById('Box_Sort').value = !sortby ? "Id_low" : sortValue;

                document.getElementById('Box_Sort').addEventListener('change', function() {
                    var selectedValue = this.value.split("_")[0];
                    var sortByType = this.value.split("_")[1];

                    submitSearch("sortby", selectedValue);
                    submitSearch("typesort", sortByType);
                });
            </script>
        </div>
    </div>
</div>

@* Phần product *@
<div class="container">
   <div class="row">
       @{
            var scheme = Context.Request.Scheme; // http hoặc https
            var host = Context.Request.Host; // Tên miền và cổng
            var path = Context.Request.Path; // Đường dẫn
            var queryString = Context.Request.QueryString; // Chuỗi truy vấn

            var url = $"{scheme}://{host}{path}{queryString}";
       }
        @if (Model != null && Model.Any())
        {
            @foreach (var bonsai in Model)
            {
              <div class="col-sm-6 col-md-4 col-lg-3 mb-4 d-flex justify-content-center">
                <div class="card product-card border-0 shadow-sm" style="border-radius: 12px; overflow: hidden;">
                  <div class="position-relative">
                            @if (!string.IsNullOrEmpty(bonsai.ImageOld))
                            {
                          <img src="@Url.Content("~/" + bonsai.ImageOld)" alt="@bonsai.BonsaiName" class="card-img-top img-fluid" style="height: 200px; object-fit: cover;">
                            }
                            else
                            {
                          <img src="~/Data/noimage.png" alt="@bonsai.BonsaiName" class="card-img-top img-fluid" style="height: 200px; object-fit: cover;">
                            }
                    <!-- Hover Info -->
                    <div class="hover-overlay position-absolute top-0 w-100 h-100 d-flex flex-column justify-content-center align-items-center bg-dark bg-opacity-50 text-white opacity-0">
                      <p class="mb-2">Tuổi: @bonsai.YearOld năm</p>
                      <p class="mb-2">Số lượng: Còn @bonsai.Quantity cây</p>
                      <button class="btn btn-success">Thêm vào giỏ hàng</button>
                    </div>
                  </div>
                  <div style="" class="cartt">
						<div>
							@* <form asp-action="Yeuthich" asp-controller="Yeuthich" method="post"> *@
								<input type="hidden" value="@bonsai.Id" name="bonsai_id" />
								<button class="btn btn-outline-danger rounded-circle my-1" type="submit"><i class="fa-light fa-heart"></i></button>
							@* </form> *@
						    <form asp-action="AddCart" asp-controller="Cart" method="post">
							    <input type="hidden" value="@bonsai.Id" name="bonsai_id" />
							    <input type="hidden" name="quantity" value="1" />
                                <input type="hidden" name="redirectUrl" value="@url" />
                                <button class="btn btn-outline-primary rounded-circle my-1" type="submit"><i class="fa-light fa-cart-shopping"></i></button>
						    </form>
                            @* <form asp-action="" asp-controller="" method="post"> *@
                                <input type="hidden" value="@bonsai.Id" name="bonsai_id" />
                                <input type="hidden" name="quantity" value="1" />
                                <button class="btn btn-outline-success rounded-circle my-1" type="submit"><i class="fa-light fa-eye"></i></button>
                            @* </form> *@
                      </div>
                  </div>
                  <div class="card-body text-center">
                    <!-- Default Info -->
                    <h5 class="card-title text-truncate">@bonsai.BonsaiName</h5>
                    <p class="card-text text-danger font-weight-bold">@bonsai.Price.ToString("F3") vnđ</p>
                    <p class="card-tex">@Html.Raw(bonsai.Description)</p>
                  </div>
                </div>
              </div>
            }
        }
        else
        {
        <div>@ViewData["Error"]</div>
        }
    </div>
</div>


    @* Phân trang *@
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (ViewData["CurrentPage"] != null && ViewData["TotalPages"] != null)
            {
                @if ((int)ViewData["CurrentPage"] > 1)
                {
                    <li class="page-item">
                        <a class="page-link" onclick="submitSearch('page',1)" aria-label="First">
                            <span aria-hidden="true">&laquo;&laquo;</span>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" onclick="submitSearch('page',@ViewData["CurrentPage"]-1)" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @for (int i = (int)ViewData["CurrentPage"] - 2; i <= (int)ViewData["TotalPages"]; i++)
                {
                    if (i >= 1 && i <= (int)ViewData["CurrentPage"] + 2 && i <= (int)ViewData["TotalPages"])
                    {
                        <li class="page-item @(i == (int)ViewData["CurrentPage"] ? "active" : "")">
                            <a class="page-link" onclick="submitSearch('page',@i)">@i</a>
                        </li>
                    }
                }

                @if ((int)ViewData["CurrentPage"] < (int)ViewData["TotalPages"])
                {
                    <li class="page-item">
                        <a class="page-link" onclick="submitSearch('page',@ViewData["CurrentPage"]+1)" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" onclick="submitSearch('page',@ViewData["TotalPages"])" aria-label="Last">
                            <span aria-hidden="true">&raquo;&raquo;</span>
                        </a>
                    </li>
                }
            }
        </ul>
    </nav>
</div>