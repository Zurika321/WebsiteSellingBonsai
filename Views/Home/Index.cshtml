@{
    ViewData["Title"] = "Home Page";
}
@using System.Linq

@model IEnumerable<WebsiteSellingBonsaiAPI.DTOS.BonsaiDTO>

    <style>
.card {
    background-color: #f9fdf9; /* Màu nền nhạt, hợp với cây cảnh */
    transition: transform 0.3s ease, border-color 0.3s ease;
}

.card:hover {
    transform: scale(1.05);
    border-color: #218838;
    box-shadow: -15px -15px 15px 5px rgba(0, 0, 0, 0.3),15px 15px 15px 5px rgba(0, 0, 0, 0.3);
}

.img-container {
    overflow: hidden; /* Tránh ảnh bị tràn */
}

.img_show_product {
    display: block;
    width: 100%;
    transition: transform 0.3s ease;
}

.img_show_product:hover {
    transform: scale(1.1); /* Phóng to ảnh khi hover */
}

.card-body {
    position: relative;
    overflow: hidden; /* Giới hạn nội dung bên trong card */
}

/* Hiển thị mặc định */
.default-info {
    text-align: center;
    line-height: 1.6;
}

/* Ẩn thông tin khi không hover */
.hover-info {
    /* height: 100%; */
    position: absolute;
    top: 0;
    left: 100%;
    width: 100%;
    background-color: rgba(40, 167, 69, 0.95);
    color: white;
    font-size: 16px;
    text-align: center;
    transition: left 0.3s ease-in-out;
    line-height: 2;
    font-weight: bold;
    text-wrap: wrap;
    z-index: 2;
}

/* Hiện thông tin khi hover vào card */
.card:hover .hover-info {
    left: 0;
}

/* Tùy chỉnh nút */
.hover-info button {
    background-color: #218838;
    border: none;
    color: white;
    font-size: 14px;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

.hover-info button:hover {
    background-color: #1e7e34;
}
    </style>
    <h2>Cây Bonsais</h2> 
    <p id="output"></p>
<script>
    // Hàm để lấy tham số từ URL
    function getQueryParam(param) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(param);
    }

    // Lấy các tham số search, TypeId, StyleId, GeneralMeaningId từ URL
    const sizeMin = getQueryParam("sizeMin");
    const sizeMax = getQueryParam("sizeMax");
    const YearOldMin = getQueryParam("YearOldMin");
    const YearOldMax = getQueryParam("YearOldMax");
    const typeId = getQueryParam("TypeId");
    const styleId = getQueryParam("StyleId");
    const generalMeaningId = getQueryParam("GeneralMeaningId");

    // Chuyển dữ liệu từ ViewData thành đối tượng JavaScript
    const typeList = @Html.Raw(Json.Serialize(ViewData["TypeList"]));  // Dữ liệu về các loại cây
    const styleList = @Html.Raw(Json.Serialize(ViewData["StyleList"])); // Dữ liệu về các phong cách
    const generalMeaningList = @Html.Raw(Json.Serialize(ViewData["GeneralMeaningList"])); // Dữ liệu về ý nghĩa

    // Hàm để tìm tên dựa trên ID từ danh sách
    function getNameById(list, id) {
        const item = list.find(element => element.value == id);  // Tìm kiếm theo giá trị 'value' (ID)
        return item ? item.text : "Không có tên";  // Trả về 'text' nếu tìm thấy
    }

    // Tìm tên từ các ID
    const typeName = typeId ? getNameById(typeList, typeId) : "Không có giá trị TypeId";
    const styleName = styleId ? getNameById(styleList, styleId) : "Không có giá trị StyleId";
    const generalMeaning = generalMeaningId ? getNameById(generalMeaningList, generalMeaningId) : "Không có giá trị GeneralMeaningId";

    // Hiển thị các giá trị trong thẻ <p> với id là "output"
    let outputText = "";
    if (typeId) outputText += `<strong>Loại cây:</strong> ${typeName} <br>`;
    if (styleId) outputText += `<strong>Kiểu:</strong> ${styleName} <br>`;
    if (generalMeaningId) outputText += `<strong>Ý nghĩa chung:</strong> ${generalMeaning} <br>`;
    if (sizeMin && sizeMin != -1) outputText += `<strong>sizeMin:</strong> ${sizeMin} <br>`;
    if (sizeMax && sizeMax != -1) outputText += `<strong>sizeMax:</strong> ${sizeMax} <br>`;
    if (YearOldMin && YearOldMin != -1) outputText += `<strong>YearOldMin cây:</strong> ${YearOldMin} <br>`;
    if (YearOldMax && YearOldMax != -1) outputText += `<strong>YearOldMax:</strong> ${YearOldMax} <br>`;

    // Ghi vào thẻ <p>
    document.getElementById("output").innerHTML = outputText;
</script>

    <div class="d-flex justify-content-between">
        <div>
            <p>Tổng kết quả tìm thấy: @ViewData["totalBonsais"]</p>
            @{
                var totalBonsais = (int)ViewData["totalBonsais"]; // Tổng số bonsai
                var resultsPerPage = 4; // Số kết quả trên mỗi trang
                var totalPages = (int)Math.Ceiling((double)totalBonsais / resultsPerPage); // Tổng số trang
                var currentPage = (int)ViewData["CurrentPage"]; // Trang hiện tại

                // Tính số sản phẩm hiển thị trên trang hiện tại
                var startIndex = (currentPage - 1) * resultsPerPage + 1; // Chỉ số bắt đầu
                var endIndex = Math.Min(currentPage * resultsPerPage, totalBonsais); // Chỉ số kết thúc, tối đa bằng totalBonsais

                // Nếu trang cuối cùng có ít sản phẩm hơn số sản phẩm mỗi trang
                var itemsOnCurrentPage = endIndex - startIndex + 1; 
            }
            <p>Tổng kết quả hiển thị: @itemsOnCurrentPage/@ViewData["totalBonsais"] (page @currentPage)</p>
        </div>
        <div>
            <select>
                <option value="value">Sắp xếp mặc định</option>
                <option value="value">Gía tiền từ thấp đến cao</option>
                <option value="value">Gía tiền từ cao đến thấp</option>
            </select>
        </div>
        
    </div>

    @* Phần Sản phẩm *@
    <div class="row">
        @if (Model != null && Model.Any())
        {
            @foreach (var bonsai in Model)
            {
                <div class="col col-sm-6 col-lg-4 col-xl-3 justify-content-center d-flex my-2">
                    <div class="card border-success" style="width: 18rem; border: 2px solid #28a745; border-radius: 10px; overflow: hidden;">
                        <div class="img-container">
                            @if (!string.IsNullOrEmpty(bonsai.ImageOld))
                            {
                                <img src="@Url.Content("~/" + bonsai.ImageOld)" alt="Product Image" alt="@bonsai.BonsaiName" 
                                class="card-img-top img_show_product"/>
                            }
                            else
                            {
                                <img src="https://w7.pngwing.com/pngs/819/548/png-transparent-photo-image-landscape-icon-images-thumbnail.png" alt="@bonsai.BonsaiName"
                                class="card-img-top img_show_product"/>
                            }
                             <!-- Hiển thị khi hover -->
                            <div class="hover-info">
                                <p>Tuổi: @bonsai.YearOld năm</p>
                                <p>Số lượng: Còn @bonsai.Quantity cây</p>
                                <button class="btn btn-success w-100 mt-2">Thêm vào giỏ hàng</button>
                            </div>       
                        </div>

                        <div class="card-body">
                            <!-- Hiển thị mặc định -->
                            <div class="default-info">
                                <h5 class="card-title">@bonsai.BonsaiName</h5>
                                <p class="card-text text-danger font-weight-bold">@bonsai.Price.ToString("F3") vnđ</p>
                                <p class="card-text text-muted">@bonsai.Description</p>
                            </div>          
                        </div>
                    </div>
                </div>
            }

        }
        else
        {
                <div>@ViewData["Error"]</div>
        }
    </div>



    @* Phân trang *@
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (ViewData["CurrentPage"] != null && ViewData["TotalPages"] != null)
            {
                @if ((int)ViewData["CurrentPage"] > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="?search=@ViewData["Search"]&TypeId=@ViewData["TypeId"]&StyleId=@ViewData["StyleId"]&GeneralMeaningId=@ViewData["GeneralMeaningId"]&page=1" aria-label="First">
                            <span aria-hidden="true">&laquo;&laquo;</span>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="?search=@ViewData["Search"]&TypeId=@ViewData["TypeId"]&StyleId=@ViewData["StyleId"]&GeneralMeaningId=@ViewData["GeneralMeaningId"]&page=@((int)ViewData["CurrentPage"] - 1)" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }

                @for (int i = (int)ViewData["CurrentPage"] - 2; i <= (int)ViewData["TotalPages"]; i++)
                {
                    if (i >= 1 && i <= (int)ViewData["CurrentPage"] + 2 && i <= (int)ViewData["TotalPages"])
                    {
                        <li class="page-item @(i == (int)ViewData["CurrentPage"] ? "active" : "")">
                            <a class="page-link" href="?search=@ViewData["Search"]&TypeId=@ViewData["TypeId"]&StyleId=@ViewData["StyleId"]&GeneralMeaningId=@ViewData["GeneralMeaningId"]&page=@i">@i</a>
                        </li>
                    }
                }

                @if ((int)ViewData["CurrentPage"] < (int)ViewData["TotalPages"])
                {
                    <li class="page-item">
                        <a class="page-link" href="?search=@ViewData["Search"]&TypeId=@ViewData["TypeId"]&StyleId=@ViewData["StyleId"]&GeneralMeaningId=@ViewData["GeneralMeaningId"]&page=@((int)ViewData["CurrentPage"] + 1)" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="?search=@ViewData["Search"]&TypeId=@ViewData["TypeId"]&StyleId=@ViewData["StyleId"]&GeneralMeaningId=@ViewData["GeneralMeaningId"]&page=@ViewData["TotalPages"]" aria-label="Last">
                            <span aria-hidden="true">&raquo;&raquo;</span>
                        </a>
                    </li>
                }
            }
        </ul>
    </nav>
</div>