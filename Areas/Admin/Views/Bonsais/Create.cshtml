@model WebsiteSellingBonsaiAPI.DTOS.BonsaiDTO

@{
    ViewData["Title"] = "Create";
}

@if (TempData["SuccessMessage"] != null)
{
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
}

@if (ViewBag.ErrorMessage != null)
{
        <div class="alert alert-danger">
        @ViewBag.ErrorMessage
        </div>
}
@if (ViewBag.ErrorMessages != null && ViewBag.ErrorMessages.Count > 0)
{
        <div class="alert alert-danger">
            <ul>
            @foreach (var error in ViewBag.ErrorMessages)
            {
                        <li>@error</li>
            }
            </ul>
        </div>
}

<h1>Create</h1>

<h4>Bonsai</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" asp-area="Admin" asp-controller="Bonsais" method="Post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <input asp-for="Image" class="form-control" type="file" accept="image/*" id="Avatar">
                <img src="https://w7.pngwing.com/pngs/819/548/png-transparent-photo-image-landscape-icon-images-thumbnail.png"
                id="imgPreview" style="max-height: 300px"/>
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BonsaiName" class="control-label"></label>
                <input asp-for="BonsaiName" class="form-control" />
                <span asp-validation-for="BonsaiName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FengShuiMeaning" class="control-label"></label>
                <input asp-for="FengShuiMeaning" class="form-control" />
                <span asp-validation-for="FengShuiMeaning" class="text-danger"></span>
            </div>
             <div class="form-group">
                <label asp-for="Size" class="control-label"></label>
                <input asp-for="Size" class="form-control" />
                <span asp-validation-for="Size" class="text-danger"></span>
            </div>
             <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="YearOld" class="control-label"></label>
                <input asp-for="YearOld" class="form-control" />
                <span asp-validation-for="YearOld" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MinLife" class="control-label"></label>
                <input asp-for="MinLife" class="form-control" />
                <span asp-validation-for="MinLife" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="MaxLife" class="control-label"></label>
                <input asp-for="MaxLife" class="form-control" />
                <span asp-validation-for="MaxLife" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TypeId" class="control-label"></label>
                <select asp-for="TypeId" class="form-control" asp-items="ViewBag.TypeId"></select>
                <span asp-validation-for="TypeId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="GeneralMeaningId" class="control-label"></label>
                <select asp-for="GeneralMeaningId" class="form-control" asp-items="ViewBag.GeneralMeaningId"></select>
                <span asp-validation-for="GeneralMeaningId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="StyleId" class="control-label"></label>
                <select asp-for="StyleId" class="form-control" asp-items="ViewBag.StyleId"></select>
                <span asp-validation-for="StyleId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Header {
    @{
                <link href="~/admin/plugins/ckeditor5/ckeditor5.css" rel="stylesheet" />
    }
}
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
                <script type="importmap">
                    {
                        "imports": {
                            "ckeditor5": "/admin/plugins/ckeditor5/ckeditor5.js",
                            "ckeditor5/": "/admin/plugins/ckeditor5/"
                        }
                    }
                </script>
                   <script type="module">
            import {
                ClassicEditor,
                Essentials,
                Paragraph,
                Bold,
                Italic,
                Font
            } from 'ckeditor5';

            // Lấy tất cả phần tử với ID 'Details' hoặc 'Description'
            const editors = document.querySelectorAll('#FengShuiMeaning, #Description');

            // Khởi tạo editor cho từng phần tử
            editors.forEach(editorElement => {
                ClassicEditor
                    .create(editorElement, {
                        plugins: [Essentials, Paragraph, Bold, Italic, Font],
                        toolbar: [
                            'undo', 'redo', '|', 'bold', 'italic', '|',
                            'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor'
                        ]
                    })
                    .then(editor => {
                        console.log(`Editor initialized for:`, editorElement.id);
                    })
                    .catch(error => {
                        console.error(`Error initializing editor for ${editorElement.id}:`, error);
                    });
            });
        </script>
            <script>
        window.onload = () => {
            document.getElementById("Avatar").onchange = (e) => {
                var preview = document.getElementById('imgPreview');
                var file = e.target.files[0];
                var reader  = new FileReader();

                reader.onloadend = function () {
                  preview.src = reader.result;
                }

                if (file) {
                  reader.readAsDataURL(file);
                } else {
                    preview.src = 'https://w7.pngwing.com/pngs/819/548/png-transparent-photo-image-landscape-icon-images-thumbnail.png';
                }
            };
        }
    </script>
}     
